function LBretinaExporter()
{
	// get orignal slice objects
	var orgDom = fw.getDocumentDOM();
	orgDom.currentLayerNum = orgDom.layers.length - 1;
	orgDom.selectAllOnLayer( orgDom.layers.length - 1, false, false );
	var orgObjects = fw.selection;
	if( !orgObjects.length ) {
		alert( 'No objects in web layer... X(' );
		return false;
	}

	// get variable
	var _postfix = prompt( 'Enter Postfix', '_2x' );
	if( _postfix == null ) _postfix = '_2x';
	var postfixLen = 0 - _postfix.length;

	var width        = orgDom.width * 2;
	var height       = orgDom.height * 2;
	var resolution   = orgDom.resolution * 2;
	var units        = orgDom.resolutionUnits;
	var orgPageIndex = orgDom.currentPageNum;

	// export settings
	var exportSet = orgDom.exportSettings;
	var orgExportSettings = exportSet;
	exportSet.discardUnspecifiedSlices = true;
	exportSet.exportFilesStyle = "Images Only";
	exportSet.exportPageMode = "current page";
	exportSet.sliceUsingUrls = true;

	exporting( true );
	exporting( false );
	
	/*
	 * exporting images
	 *
	 * @param { boolean } isRetina: true is exporting @2x
	 */
	function exporting( isRetina )
	{
		// duplicate page to temporary
		orgDom.duplicatePage( orgPageIndex );
		orgDom.changeCurrentPage( orgPageIndex + 1 );

		if( isRetina ) {
			// resizing document
			orgDom.setDocumentImageSize( 
				{ left: 0, top: 0, right: width, bottom: height }, 
				{pixelsPerUnit: resolution, units: units}, true 
			);

			// fw.runScript("LBalert.jsf");
			// TODO: get platform -> path to PsLE Scale.jsf
		}

		// get slice objects
		var exportDom = fw.getDocumentDOM();
		exportDom.currentLayerNum = exportDom.layers.length - 1;
		exportDom.selectAllOnLayer( exportDom.layers.length - 1, false, false );
		var selected = fw.selection;

		// set slice name (copy from orignal slice name) & slice selection
		var len = selected.length;
		var sliceObj = new Array();

		if( isRetina ) {
			while( len-- )
			{
				if( '[object SliceHotspot]' == selected[len].__proto__ 
					&& _postfix == ( ( null != orgObjects[len].baseName ) ? orgObjects[len].baseName.slice( postfixLen ) : null ) )
				{
					selected[len].baseName = orgObjects[len].baseName;
					sliceObj.push(selected[len]);
				}
			}

			// scaling PsLE
			orgDom.setWebObjectsVisibility( false );
			orgDom.selectAll();
			// TODO: Scaling PsLE
			orgDom.setWebObjectsVisibility( true );
		} else {
			while( len-- )
			{
				if( '[object SliceHotspot]' == selected[len].__proto__ && 
					_postfix == ( ( null != orgObjects[len].baseName ) ? orgObjects[len].baseName.slice( postfixLen ) : null ) )
				{
					selected[len].baseName = orgObjects[len].baseName.substring( 0, orgObjects[len].baseName.length + postfixLen );
					sliceObj.push(selected[len]);
				} else if( '[object SliceHotspot]' == selected[len].__proto__ ) {
					selected[len].baseName = orgObjects[len].baseName;
					sliceObj.push(selected[len]);
				}
			}
		}
		fw.selection = sliceObj;

		// delete temporary page after exporting
		fw.getDocumentDOM().setExportSettings( exportSet );
		if( fw.selection.length ) fw.exportDocumentAs(null, null, null);
		// orgDom.deletePageAt( orgPageIndex + 1 );
	}

	// set original export setting
	fw.getDocumentDOM().setExportSettings( orgExportSettings );

	return true;
}

LBretinaExporter();
